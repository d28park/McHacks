There are 2 interactions scheme:
SkeletonManager-  uses X,Y and is resilient to proximity -1.25<x<1.25  -1<y<1
HoveringManager - uses W,H : HoveringTranslator translate the Region-of-interest near the shoulder to screen coordinates.
							it includes smoothed-movement and is good enough to show the user like "mouse-pointer"
                             OR returns the raw W,H  (0<w,h<1)
							 
Choose scheme:
Time-base-click , there is a prefab which also does the animation. need to be updated each unity update().
BackGesture (45 degrees to left-down)  there is a prefab and BackRecognitionManager script on it (MonoBehaviour) which register to data-frame-ready
TPoseDetector, prefab and data-frame-ready
SlideDetector (swipe right to left X skeleton units anywhere in the screen). 
	As a slide-event is thrown when the slide ended, the hovering can be now on a different button, so there is a global
	boolean which tells if the hovering changed button and if it did , the slide-action is candled.
	TODO: worth adding to the alg, to say which button started the slide.


On start()
create regions , for example:  for skeltonManager , if you have 3 regions , choose ROI of 0.3 to 1.2 and divide it to 3.
							 
On update()
pass the palmPosition (either in w,h pixels like 300,200 or x,y like 1.3,1.0) and get the active-region
